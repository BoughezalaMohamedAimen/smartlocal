{"version":3,"sources":["layouts/Header.js","components/classes/Chambre.js","components/classes/Device.js","components/chambres/Chambre.js","components/chambres/Chambres.js","components/devices/Devices.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","onClick","this","props","changeTitle","bind","to","icon","faArrowLeft","href","faCog","faSync","Component","Chambre","id","nom","devices","Device","chambre","etat","type","state","lampes","prises","rideaux","actives","inactives","map","device","setState","key","faDoorOpen","faPowerOff","faPlug","faLightbulb","faStore","Chambres","Fragment","title","chambres","Devices","deviceIcon","deviceEtat","deviceCommandes","sendCommande","faArrowUp","faPause","faArrowDown","parseInt","match","params","App","commande","a","fetch","then","data","syncChambres","json","push","catch","error","console","log","chambreDevices","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"6TAyBeA,E,uKAlBX,OACE,yBAAKC,UAAU,6CACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACf,kBAAC,IAAD,CAAMC,QAASC,KAAKC,MAAMC,YAAYC,KAAKH,KAAK,sBAAuBF,UAAU,sBAAsBM,GAAG,KAAI,kBAAC,IAAD,CAAiBC,KAAMC,QAErI,yBAAKR,UAAU,oBACb,uBAAIS,KAAK,UAAUT,UAAU,uBAAsB,kBAAC,IAAD,CAAiBO,KAAMG,MAA1E,mBACA,uBAAID,KAAK,iBAAiBT,UAAU,uBAAsB,kBAAC,IAAD,CAAiBO,KAAMI,MAAjF,8B,GAXOC,aCINC,EAPb,WAAYC,EAAGC,EAAIC,GAAU,oBAC3Bd,KAAKY,GAAGA,EACRZ,KAAKa,IAAIA,EACTb,KAAKc,QAAQA,GCMFC,EATb,WAAYH,EAAGI,EAAQH,EAAII,EAAKC,GAAO,oBACrClB,KAAKY,GAAGA,EACRZ,KAAKgB,QAAQA,EACbhB,KAAKa,IAAIA,EACTb,KAAKiB,KAAKA,EACVjB,KAAKkB,KAAKA,GC6CCP,E,4MA9CbQ,MAAM,CACJC,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,UAAU,G,kEAEQ,IAAD,OACbJ,EAAO,EAAEC,EAAO,EAAEC,EAAQ,EAAEC,EAAQ,EAAEC,EAAU,EACpDxB,KAAKC,MAAMe,QAAQF,QAAQW,KAAI,SAAAC,GACX,SAAbA,EAAOR,OAAcE,GAAQ,GAChB,UAAbM,EAAOR,OAAeI,GAAS,GAClB,SAAbI,EAAOR,OAAcG,GAAQ,GAC7BK,EAAOT,KAAKM,GAAS,EACnBC,GAAW,EAChB,EAAKG,SAAS,CAACP,WACf,EAAKO,SAAS,CAACL,YACf,EAAKK,SAAS,CAACN,WACf,EAAKM,SAAS,CAACJ,YACf,EAAKI,SAAS,CAACH,mB,+BAKnB,IAAIR,EAAQhB,KAAKC,MAAMe,QACvB,OACE,yBAAKlB,UAAU,+BAA+B8B,IAAKZ,EAAQJ,IACzD,yBAAKd,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAMM,GAAI,aAAaY,EAAQJ,GAAIb,QAASC,KAAKC,MAAMC,YAAYC,KAAKH,KAAKgB,EAAQH,MACjF,kBAAC,IAAD,CAAiBR,KAAMwB,IAAY/B,UAAU,gBADjD,UACyE,kCAAQkB,EAAQH,IAAhB,OAG3E,yBAAKf,UAAU,mCACb,kBAAC,IAAD,CAAiBO,KAAMyB,IAAYhC,UAAU,gBAD/C,IAC+D,0BAAMA,UAAU,eAAeE,KAAKmB,MAAMI,QAA1C,KAD/D,QAEE,kBAAC,IAAD,CAAiBlB,KAAMyB,IAAYhC,UAAU,mBAF/C,IAEkE,8BAAOE,KAAKmB,MAAMK,UAAlB,KAFlE,QAGE,kBAAC,IAAD,CAAiBnB,KAAM0B,IAAQjC,UAAU,mBAH3C,IAG8D,8BAAOE,KAAKmB,MAAME,OAAlB,KAH9D,QAIE,kBAAC,IAAD,CAAiBhB,KAAM2B,IAAalC,UAAU,mBAJhD,IAImE,8BAAOE,KAAKmB,MAAMC,OAAlB,KAJnE,QAKE,kBAAC,IAAD,CAAiBf,KAAM4B,IAASnC,UAAU,mBAL5C,IAK+D,8BAAOE,KAAKmB,MAAMG,QAAlB,KAL/D,e,GAlCYZ,aCePwB,E,uKAhBH,IAAD,OACP,OACI,kBAAC,IAAMC,SAAP,KACE,yBAAKrC,UAAU,eACb,wBAAIA,UAAU,eAAeE,KAAKC,MAAMmC,QAGlCpC,KAAKC,MAAMoC,SAASZ,KAAI,SAAAT,GAAO,OAC3B,kBAAC,EAAD,CAASA,QAASA,EAASd,YAAa,EAAKD,MAAMC,sB,GAVlDQ,a,QCiER4B,E,4MA5DbC,WAAW,SAACb,GACV,MAAgB,SAAbA,EAAOR,KACHc,IACS,SAAbN,EAAOR,KACHa,IACS,UAAbL,EAAOR,KACHe,SADP,G,EAGFO,WAAW,SAACd,GACV,OAAGA,EAAOT,KACD,cAEA,iB,EAEXwB,gBAAgB,SAACf,GACf,MAAgB,SAAbA,EAAOR,KAER,kBAAC,IAAMiB,SAAP,KACE,uBAAGrC,UAAU,2BAA0B,kBAAC,IAAD,CAAiBO,KAAMyB,IAAY/B,QAAS,EAAKE,MAAMyC,aAAavC,KAAxB,eAAkCuB,EAAOd,GAAG,MADjI,QAEE,uBAAGd,UAAU,6BAA4B,kBAAC,IAAD,CAAiBO,KAAMyB,IAAY/B,QAAS,EAAKE,MAAMyC,aAAavC,KAAxB,eAAkCuB,EAAOd,GAAG,OAKjI,kBAAC,IAAMuB,SAAP,KACE,uBAAGrC,UAAU,2BAA0B,kBAAC,IAAD,CAAiBO,KAAMsC,IAAW5C,QAAS,EAAKE,MAAMyC,aAAavC,KAAxB,eAAkCuB,EAAOd,GAAG,MADhI,QAEE,uBAAGd,UAAU,wBAAuB,kBAAC,IAAD,CAAiBO,KAAMuC,IAAS7C,QAAS,EAAKE,MAAMyC,aAAavC,KAAxB,eAAkCuB,EAAOd,GAAG,MAF3H,QAGE,uBAAGd,UAAU,6BAA4B,kBAAC,IAAD,CAAiBO,KAAMwC,IAAa9C,QAAS,EAAKE,MAAMyC,aAAavC,KAAxB,eAAkCuB,EAAOd,GAAG,Q,uDAKhI,IAAD,OACP,OACI,kBAAC,IAAMuB,SAAP,KACA,yBAAKrC,UAAU,eACf,wBAAIA,UAAU,eAAeE,KAAKC,MAAMmC,QAErCpC,KAAKC,MAAMoC,SAASZ,KAAI,SAAAT,GACrB,GAAGA,EAAQJ,IAAIkC,SAAS,EAAK7C,MAAM8C,MAAMC,OAAOpC,IAE9C,OAAQI,EAAQF,QAAQW,KAAI,SAAAC,GAAM,OAChC,yBAAME,IAAKF,EAAOd,GAAId,UAAU,gCAC9B,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAiBO,KAAM,EAAKkC,WAAWb,GAAS5B,UAAW,EAAK0C,WAAWd,KAD7E,SACgGA,EAAOb,KAEvG,yBAAKf,UAAU,oBACZ,EAAK2C,gBAAgBf,iB,GAlDxBhB,aC0EPuC,E,4MAnEb9B,MAAM,CACJkB,SAAS,GACTD,MAAM,sB,EAIRlC,YAAY,SAACkC,GACT,EAAKT,SAAS,CAACS,W,EAGnBM,a,uCAAa,WAAMhB,EAAOwB,GAAb,SAAAC,EAAA,sEACLC,MAAM,sBAAD,OAAuB1B,EAAvB,YAAiCwB,IAC3CG,MAAK,SAAAC,GAAI,OAAE,EAAKC,kBAFN,2C,0DAMbA,a,sBAAc,4BAAAJ,EAAA,6DACRrC,EAAQ,GADA,SAENsC,MAAM,uCACXC,MAAK,SAAAC,GAAI,OAAEA,EAAKE,UAChBH,MAAK,SAACC,GACJA,EAAK7B,KAAI,SAACC,GACPZ,EAAQ2C,KAAK,IAAI1C,EAAOW,EAAOd,GAAGc,EAAOV,QAAQU,EAAOb,IAAIa,EAAOT,KAAKS,EAAOR,aAElFwC,OAAM,SAACC,GACRC,QAAQC,IAAIF,MATF,uBAaNP,MAAM,6BACXC,MAAK,SAAAC,GAAI,OAAEA,EAAKE,UAChBH,MAAM,SAAAC,GACL,IAAIjB,EAAS,GACTiB,EAAK7B,KAAI,SAAAT,GACP,IAAI8C,EAAe,GACnBhD,EAAQW,KAAI,SAAAC,GAAaA,EAAOV,SAASA,EAAQJ,IAAIkD,EAAeL,KAAK/B,MACzEW,EAASoB,KAAK,IAAI9C,EAAQK,EAAQJ,GAAGI,EAAQH,IAAIiD,OAGvD,EAAKnC,SAAS,CAACU,SAASA,OAEzBqB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MA1BF,OA4BZC,QAAQC,IAAI,EAAK1C,MAAMkB,UA5BX,2C,kEA+BZrC,KAAKuD,iB,+BAGG,IAAD,OACP,OACE,kBAAC,IAAMpB,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQjC,YAAaF,KAAKE,cAC1B,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,KAAlB,IAAuB,kBAAC,EAAD,CAAU3B,SAAUrC,KAAKmB,MAAMkB,SAAUnC,YAAaF,KAAKE,YAAakC,MAAOpC,KAAKmB,MAAMiB,SACjH,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,kBAChB,SAACjB,GAAD,OAAU,kBAAC,EAAD,iBAAaA,EAAb,CAAoBV,SAAU,EAAKlB,MAAMkB,SAAUK,aAAc,EAAKA,aAAcN,MAAO,EAAKjB,MAAMiB,mB,GA3D1G1B,aCCEuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdpB,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMoB,c","file":"static/js/main.34ddf70b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { faCog,faSync,faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className='container-fluid bg-indigo text-white py-2'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-6'>\r\n            <Link onClick={this.props.changeTitle.bind(this,\"Liste des chambres\")} className=\"d-inline-block px-2\" to=\"/\"><FontAwesomeIcon icon={faArrowLeft} /></Link>\r\n            </div>\r\n            <div className='col-6 text-right'>\r\n              <a  href=\"/admin/\" className=\"d-inline-block px-2\"><FontAwesomeIcon icon={faCog} /> &nbsp; Parametre</a>\r\n              <a  href=\"/chambres/sync\" className=\"d-inline-block px-2\"><FontAwesomeIcon icon={faSync} /> &nbsp; Synchronizer</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","\r\nclass Chambre {\r\n  constructor(id,nom,devices) {\r\n    this.id=id\r\n    this.nom=nom\r\n    this.devices=devices\r\n  }\r\n}\r\n\r\nexport default Chambre\r\n","\r\nclass Device {\r\n  constructor(id,chambre,nom,etat,type) {\r\n    this.id=id\r\n    this.chambre=chambre\r\n    this.nom=nom\r\n    this.etat=etat\r\n    this.type=type\r\n  }\r\n}\r\n\r\nexport default Device\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport { faDoorOpen,faRss,faPlug,faPowerOff,faStore,faLightbulb } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Chambre extends Component {\r\n  state={\r\n    lampes:0,\r\n    prises:0,\r\n    rideaux:0,\r\n    actives:0,\r\n    inactives:0,\r\n  }\r\n  componentDidMount(){\r\n    var lampes=0,prises=0,rideaux=0,actives=0,inactives=0;\r\n    this.props.chambre.devices.map(device=>{\r\n        if(device.type==\"Lampe\")lampes+=1;\r\n        if(device.type==\"Rideau\")rideaux+=1;\r\n        if(device.type==\"Prise\")prises+=1;\r\n        if(device.etat)actives+=1;\r\n        else inactives+=1;\r\n        this.setState({lampes});\r\n        this.setState({rideaux});\r\n        this.setState({prises});\r\n        this.setState({actives});\r\n        this.setState({inactives});\r\n\r\n    })\r\n  }\r\n  render() {\r\n    let chambre=this.props.chambre\r\n    return (\r\n      <div className=\"container py-2 border-bottom\" key={chambre.id}>\r\n        <div className=\"row\">\r\n          <div className=\"col-6 font-20\">\r\n            <Link to={\"/chambres/\"+chambre.id} onClick={this.props.changeTitle.bind(this,chambre.nom)}>\r\n                <FontAwesomeIcon icon={faDoorOpen} className=\"text-indigo\"/>  &nbsp; <span> {chambre.nom} </span>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-6 text-secondary text-right\">\r\n            <FontAwesomeIcon icon={faPowerOff} className=\"active-etat\"/> <span className=\"active-etat\">{this.state.actives} </span> &nbsp;\r\n            <FontAwesomeIcon icon={faPowerOff} className=\"text-secondary\"/> <span>{this.state.inactives} </span> &nbsp;\r\n            <FontAwesomeIcon icon={faPlug} className=\"text-secondary\"/> <span>{this.state.prises} </span> &nbsp;\r\n            <FontAwesomeIcon icon={faLightbulb} className=\"text-secondary\"/> <span>{this.state.lampes} </span> &nbsp;\r\n            <FontAwesomeIcon icon={faStore} className=\"text-secondary\"/> <span>{this.state.rideaux} </span> &nbsp;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chambre\r\n","import React, { Component } from 'react'\r\nimport Chambre from './Chambre'\r\nclass Chambres extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <div className='py-2 shadow'>\r\n            <h4 className=\"text-center\">{this.props.title}</h4>\r\n          </div>\r\n                {\r\n                  this.props.chambres.map(chambre=>(\r\n                      <Chambre chambre={chambre} changeTitle={this.props.changeTitle}/>\r\n                  ))\r\n                }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chambres\r\n","import React, { Component } from 'react'\r\nimport { faPlug,faPowerOff,faStore,faLightbulb,faArrowUp,faArrowDown,faPause } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nclass Devices extends Component {\r\n\r\n  deviceIcon=(device)=>{\r\n    if(device.type=='Lampe')\r\n    return faLightbulb\r\n    if(device.type=='Prise')\r\n    return faPlug\r\n    if(device.type=='Rideau')\r\n    return faStore\r\n  }\r\n  deviceEtat=(device)=>{\r\n    if(device.etat)\r\n      return \"active-etat\"\r\n    else\r\n      return \"inactive-etat\"\r\n  }\r\n  deviceCommandes=(device)=>{\r\n    if(device.type=='Lampe')\r\n    return(\r\n      <React.Fragment>\r\n        <a className=\"btn-activate text-white\"><FontAwesomeIcon icon={faPowerOff} onClick={this.props.sendCommande.bind(this,device.id,1)}/></a> &nbsp;\r\n        <a className=\"btn-deactivate text-white\"><FontAwesomeIcon icon={faPowerOff} onClick={this.props.sendCommande.bind(this,device.id,2)}/></a>\r\n      </React.Fragment>\r\n        )\r\n    else\r\n    return(\r\n        <React.Fragment>\r\n          <a className=\"btn-activate text-white\"><FontAwesomeIcon icon={faArrowUp} onClick={this.props.sendCommande.bind(this,device.id,1)}/></a> &nbsp;\r\n          <a className=\"btn-pause text-white\"><FontAwesomeIcon icon={faPause} onClick={this.props.sendCommande.bind(this,device.id,2)}/></a> &nbsp;\r\n          <a className=\"btn-deactivate text-white\"><FontAwesomeIcon icon={faArrowDown} onClick={this.props.sendCommande.bind(this,device.id,3)}/></a>\r\n        </React.Fragment>\r\n        )\r\n\r\n  }\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n        <div className='py-2 shadow'>\r\n        <h4 className=\"text-center\">{this.props.title}</h4>\r\n        </div>\r\n          {this.props.chambres.map(chambre=>{\r\n              if(chambre.id==parseInt(this.props.match.params.id))\r\n              {\r\n                return (chambre.devices.map(device=>(\r\n                  <div  key={device.id} className=\"container py-2 border-bottom\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5 font-20\">\r\n                        <FontAwesomeIcon icon={this.deviceIcon(device)} className={this.deviceEtat(device)}/> &nbsp; {device.nom}\r\n                      </div>\r\n                      <div className=\"col-7 text-right\">\r\n                        {this.deviceCommandes(device)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )))\r\n              }\r\n          })}\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Devices\r\n","import React, { Component } from 'react'\nimport './css/styles.css';\nimport {  BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from './layouts/Header';\nimport Chambre from './components/classes/Chambre';\nimport Device from './components/classes/Device';\nimport Chambres from './components/chambres/Chambres';\nimport Devices from './components/devices/Devices';\n\n\nclass App extends Component {\n  state={\n    chambres:[],\n    title:\"Liste des chambres\",\n  }\n\n\n  changeTitle=(title)=>{\n      this.setState({title})\n  }\n\n  sendCommande=async(device,commande)=>{\n    await fetch(`/chambres/commande/${device}/${commande}`)\n    .then(data=>this.syncChambres())\n\n  }\n\n  syncChambres= async ()=>{\n    var devices=[]\n    await fetch(\"/chambres/commandes/api?format=json\")\n    .then(data=>data.json())\n    .then((data) =>{\n       data.map((device)=>{\n          devices.push(new Device(device.id,device.chambre,device.nom,device.etat,device.type))\n        })\n    }).catch((error) => {\n      console.log(error)\n    });\n\n\n    await fetch(\"/chambres/api?format=json\")\n    .then(data=>data.json())\n    .then( data =>{\n      var chambres=[]\n          data.map(chambre=>{\n            var chambreDevices=[]\n            devices.map(device=>{ if(device.chambre==chambre.id) chambreDevices.push(device) })\n            chambres.push(new Chambre(chambre.id,chambre.nom,chambreDevices))\n          })\n\n      this.setState({chambres:chambres})\n    })\n    .catch((error) => {\n      console.log(error)\n    });\n    console.log(this.state.chambres)\n  }\n  componentDidMount(){\n    this.syncChambres()\n\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <Header changeTitle={this.changeTitle} />\n          <Switch>\n          <Route exact path='/'> <Chambres chambres={this.state.chambres} changeTitle={this.changeTitle} title={this.state.title}/></Route>\n          <Route exact path='/chambres/:id'>\n           {(match)=> <Devices {...match} chambres={this.state.chambres} sendCommande={this.sendCommande} title={this.state.title}/>}\n           </Route>\n          </Switch>\n        </Router>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}